@model ApplicationServicesConfigurationManagementDatabaseAccess.TicketStatusChangeMessage

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>TicketStatusChangeMessage</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.IntegrationID, "TDX Integration", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Raw(ViewBag.IntegrationName.ToString())
                @Html.HiddenFor(model => model.IntegrationID)
                @Html.ValidationMessageFor(model => model.IntegrationID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentStatusID, "Current Status", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CurrentStatusID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CurrentStatusID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UpdatedStatusID, "Updated Status", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UpdatedStatusID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UpdatedStatusID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control", @rows = 10, @id = "Message" } })
                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Insert Token", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownList("MessageToken", (List<SelectListItem>)ViewBag.MessageToken, new { id = "MessageToken", @class = "form-control" })
                <button type="button" onclick="setTextToCurrentPos()" class="btn btn-default">Insert Token</button>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function setTextToCurrentPos() {
            var messageTokenDropDown = document.getElementById("MessageToken")
            var curPos = document.getElementById("Message").selectionStart;
            console.log(curPos);
            let x = $("#Message").val();
            let text_to_insert = messageTokenDropDown.options[messageTokenDropDown.selectedIndex].value;
            $("#Message").val(x.slice(0, curPos) + text_to_insert + x.slice(curPos));
        }
    </script>

}