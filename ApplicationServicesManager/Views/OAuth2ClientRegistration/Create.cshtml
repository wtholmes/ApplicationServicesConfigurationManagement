@model AuthenticationServices.OAuth2ClientRegistrationViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
@Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Create a new client registration</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.ClientID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" style="background-color:khaki; height:45px; border-radius:5px; padding:10px">
            @Html.DisplayFor(model => model.ClientID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.ClientID)
            @Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClientSecret, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" style="background-color:khaki; height:45px; border-radius:5px; padding:10px">
            @Html.DisplayFor(model => model.ClientSecret, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.ClientSecret)
            @Html.ValidationMessageFor(model => model.ClientSecret, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClientDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ClientDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ClientDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RequestingUPN, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" style="background-color:khaki; height:45px; border-radius:5px; padding:10px">
            @Html.DisplayFor(model => model.RequestingUPN, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(Model => Model.RequestingUPN)
            @Html.ValidationMessageFor(model => model.RequestingUPN, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RequestTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" style="background-color:khaki; height:45px; border-radius:5px; padding:10px">
            @Html.DisplayFor(model => model.RequestTime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.RequestTime)
            @Html.ValidationMessageFor(model => model.RequestTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ExpirationTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.ExpirationTime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.ExpirationTime)
            @Html.ValidationMessageFor(model => model.ExpirationTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-heading">
                <a data-toggle="collapse" href="#RolesPanel" class="btn btn-secondary btn-block" title="Add/Remove Client Roles for this registration">OAuth2 Client Roles</a>
            </div>
            <div id="RolesPanel" class="panel-collapse collapse @(ViewData.ContainsKey("ExpandClientRoles") ? "show" : "")">
                <div class="panel-body">
                    <div class="form-group" style="background-color:lightyellow;padding:20px;border-radius:10px">
                        <fieldset>
                            <legend>Roles assigned to this client</legend>
                            <div class="table-responsive">
                                <table class="table" title="Assigned Roles">
                                    <thead>
                                        <tr>
                                            <th>
                                                Enabled
                                            </th>
                                            <th>
                                                Role Name
                                            </th>
                                            <th>
                                                Role Description
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (int i = 0; i < Model.OAuth2ClientRoles.Count; i++)
                                            {
                                        <tr>
                                            <td style="padding:4px">@Html.EditorFor(m => Model.OAuth2ClientRoles[i].IsChecked)</td>
                                            <td style="padding:4px">@Html.DisplayFor(m => Model.OAuth2ClientRoles[i].OAuth2Role)</td>
                                            <td style="padding:4px">@Html.DisplayFor(m => Model.OAuth2ClientRoles[i].OAuth2RoleDescription)</td>
                                            @Html.HiddenFor(m => Model.OAuth2ClientRoles[i].OAuth2Role)
                                            @Html.HiddenFor(m => Model.OAuth2ClientRoles[i].Id)
                                        </tr>

                                            }
                                    </tbody>
                                </table>
                            </div>
                        </fieldset>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>